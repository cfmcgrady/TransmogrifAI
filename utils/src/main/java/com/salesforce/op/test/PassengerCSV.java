/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.salesforce.op.test;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PassengerCSV extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PassengerCSV\",\"namespace\":\"com.salesforce.op.test\",\"fields\":[{\"name\":\"passengerId\",\"type\":\"int\"},{\"name\":\"age\",\"type\":[\"int\",\"null\"]},{\"name\":\"gender\",\"type\":{\"type\":\"enum\",\"name\":\"Gender\",\"symbols\":[\"Female\",\"Male\"]}},{\"name\":\"height\",\"type\":\"int\"},{\"name\":\"weight\",\"type\":\"int\"},{\"name\":\"description\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"boarded\",\"type\":\"long\"},{\"name\":\"recordDate\",\"type\":\"long\"},{\"name\":\"survived\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int passengerId;
  @Deprecated public java.lang.Integer age;
  @Deprecated public com.salesforce.op.test.Gender gender;
  @Deprecated public int height;
  @Deprecated public int weight;
  @Deprecated public java.lang.String description;
  @Deprecated public long boarded;
  @Deprecated public long recordDate;
  @Deprecated public boolean survived;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PassengerCSV() {}

  /**
   * All-args constructor.
   */
  public PassengerCSV(java.lang.Integer passengerId, java.lang.Integer age, com.salesforce.op.test.Gender gender, java.lang.Integer height, java.lang.Integer weight, java.lang.String description, java.lang.Long boarded, java.lang.Long recordDate, java.lang.Boolean survived) {
    this.passengerId = passengerId;
    this.age = age;
    this.gender = gender;
    this.height = height;
    this.weight = weight;
    this.description = description;
    this.boarded = boarded;
    this.recordDate = recordDate;
    this.survived = survived;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return passengerId;
    case 1: return age;
    case 2: return gender;
    case 3: return height;
    case 4: return weight;
    case 5: return description;
    case 6: return boarded;
    case 7: return recordDate;
    case 8: return survived;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: passengerId = (java.lang.Integer)value$; break;
    case 1: age = (java.lang.Integer)value$; break;
    case 2: gender = (com.salesforce.op.test.Gender)value$; break;
    case 3: height = (java.lang.Integer)value$; break;
    case 4: weight = (java.lang.Integer)value$; break;
    case 5: description = (java.lang.String)value$; break;
    case 6: boarded = (java.lang.Long)value$; break;
    case 7: recordDate = (java.lang.Long)value$; break;
    case 8: survived = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'passengerId' field.
   */
  public java.lang.Integer getPassengerId() {
    return passengerId;
  }

  /**
   * Sets the value of the 'passengerId' field.
   * @param value the value to set.
   */
  public void setPassengerId(java.lang.Integer value) {
    this.passengerId = value;
  }

  /**
   * Gets the value of the 'age' field.
   */
  public java.lang.Integer getAge() {
    return age;
  }

  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(java.lang.Integer value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'gender' field.
   */
  public com.salesforce.op.test.Gender getGender() {
    return gender;
  }

  /**
   * Sets the value of the 'gender' field.
   * @param value the value to set.
   */
  public void setGender(com.salesforce.op.test.Gender value) {
    this.gender = value;
  }

  /**
   * Gets the value of the 'height' field.
   */
  public java.lang.Integer getHeight() {
    return height;
  }

  /**
   * Sets the value of the 'height' field.
   * @param value the value to set.
   */
  public void setHeight(java.lang.Integer value) {
    this.height = value;
  }

  /**
   * Gets the value of the 'weight' field.
   */
  public java.lang.Integer getWeight() {
    return weight;
  }

  /**
   * Sets the value of the 'weight' field.
   * @param value the value to set.
   */
  public void setWeight(java.lang.Integer value) {
    this.weight = value;
  }

  /**
   * Gets the value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'boarded' field.
   */
  public java.lang.Long getBoarded() {
    return boarded;
  }

  /**
   * Sets the value of the 'boarded' field.
   * @param value the value to set.
   */
  public void setBoarded(java.lang.Long value) {
    this.boarded = value;
  }

  /**
   * Gets the value of the 'recordDate' field.
   */
  public java.lang.Long getRecordDate() {
    return recordDate;
  }

  /**
   * Sets the value of the 'recordDate' field.
   * @param value the value to set.
   */
  public void setRecordDate(java.lang.Long value) {
    this.recordDate = value;
  }

  /**
   * Gets the value of the 'survived' field.
   */
  public java.lang.Boolean getSurvived() {
    return survived;
  }

  /**
   * Sets the value of the 'survived' field.
   * @param value the value to set.
   */
  public void setSurvived(java.lang.Boolean value) {
    this.survived = value;
  }

  /** Creates a new PassengerCSV RecordBuilder */
  public static com.salesforce.op.test.PassengerCSV.Builder newBuilder() {
    return new com.salesforce.op.test.PassengerCSV.Builder();
  }
  
  /** Creates a new PassengerCSV RecordBuilder by copying an existing Builder */
  public static com.salesforce.op.test.PassengerCSV.Builder newBuilder(com.salesforce.op.test.PassengerCSV.Builder other) {
    return new com.salesforce.op.test.PassengerCSV.Builder(other);
  }
  
  /** Creates a new PassengerCSV RecordBuilder by copying an existing PassengerCSV instance */
  public static com.salesforce.op.test.PassengerCSV.Builder newBuilder(com.salesforce.op.test.PassengerCSV other) {
    return new com.salesforce.op.test.PassengerCSV.Builder(other);
  }
  
  /**
   * RecordBuilder for PassengerCSV instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PassengerCSV>
    implements org.apache.avro.data.RecordBuilder<PassengerCSV> {

    private int passengerId;
    private java.lang.Integer age;
    private com.salesforce.op.test.Gender gender;
    private int height;
    private int weight;
    private java.lang.String description;
    private long boarded;
    private long recordDate;
    private boolean survived;

    /** Creates a new Builder */
    private Builder() {
      super(com.salesforce.op.test.PassengerCSV.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.salesforce.op.test.PassengerCSV.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.passengerId)) {
        this.passengerId = data().deepCopy(fields()[0].schema(), other.passengerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.gender)) {
        this.gender = data().deepCopy(fields()[2].schema(), other.gender);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.height)) {
        this.height = data().deepCopy(fields()[3].schema(), other.height);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.weight)) {
        this.weight = data().deepCopy(fields()[4].schema(), other.weight);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.boarded)) {
        this.boarded = data().deepCopy(fields()[6].schema(), other.boarded);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.recordDate)) {
        this.recordDate = data().deepCopy(fields()[7].schema(), other.recordDate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.survived)) {
        this.survived = data().deepCopy(fields()[8].schema(), other.survived);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PassengerCSV instance */
    private Builder(com.salesforce.op.test.PassengerCSV other) {
            super(com.salesforce.op.test.PassengerCSV.SCHEMA$);
      if (isValidValue(fields()[0], other.passengerId)) {
        this.passengerId = data().deepCopy(fields()[0].schema(), other.passengerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.gender)) {
        this.gender = data().deepCopy(fields()[2].schema(), other.gender);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.height)) {
        this.height = data().deepCopy(fields()[3].schema(), other.height);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.weight)) {
        this.weight = data().deepCopy(fields()[4].schema(), other.weight);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.boarded)) {
        this.boarded = data().deepCopy(fields()[6].schema(), other.boarded);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.recordDate)) {
        this.recordDate = data().deepCopy(fields()[7].schema(), other.recordDate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.survived)) {
        this.survived = data().deepCopy(fields()[8].schema(), other.survived);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'passengerId' field */
    public java.lang.Integer getPassengerId() {
      return passengerId;
    }
    
    /** Sets the value of the 'passengerId' field */
    public com.salesforce.op.test.PassengerCSV.Builder setPassengerId(int value) {
      validate(fields()[0], value);
      this.passengerId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'passengerId' field has been set */
    public boolean hasPassengerId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'passengerId' field */
    public com.salesforce.op.test.PassengerCSV.Builder clearPassengerId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'age' field */
    public java.lang.Integer getAge() {
      return age;
    }
    
    /** Sets the value of the 'age' field */
    public com.salesforce.op.test.PassengerCSV.Builder setAge(java.lang.Integer value) {
      validate(fields()[1], value);
      this.age = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'age' field has been set */
    public boolean hasAge() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'age' field */
    public com.salesforce.op.test.PassengerCSV.Builder clearAge() {
      age = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'gender' field */
    public com.salesforce.op.test.Gender getGender() {
      return gender;
    }
    
    /** Sets the value of the 'gender' field */
    public com.salesforce.op.test.PassengerCSV.Builder setGender(com.salesforce.op.test.Gender value) {
      validate(fields()[2], value);
      this.gender = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'gender' field has been set */
    public boolean hasGender() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'gender' field */
    public com.salesforce.op.test.PassengerCSV.Builder clearGender() {
      gender = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'height' field */
    public java.lang.Integer getHeight() {
      return height;
    }
    
    /** Sets the value of the 'height' field */
    public com.salesforce.op.test.PassengerCSV.Builder setHeight(int value) {
      validate(fields()[3], value);
      this.height = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'height' field has been set */
    public boolean hasHeight() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'height' field */
    public com.salesforce.op.test.PassengerCSV.Builder clearHeight() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'weight' field */
    public java.lang.Integer getWeight() {
      return weight;
    }
    
    /** Sets the value of the 'weight' field */
    public com.salesforce.op.test.PassengerCSV.Builder setWeight(int value) {
      validate(fields()[4], value);
      this.weight = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'weight' field has been set */
    public boolean hasWeight() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'weight' field */
    public com.salesforce.op.test.PassengerCSV.Builder clearWeight() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.String getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.salesforce.op.test.PassengerCSV.Builder setDescription(java.lang.String value) {
      validate(fields()[5], value);
      this.description = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'description' field */
    public com.salesforce.op.test.PassengerCSV.Builder clearDescription() {
      description = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'boarded' field */
    public java.lang.Long getBoarded() {
      return boarded;
    }
    
    /** Sets the value of the 'boarded' field */
    public com.salesforce.op.test.PassengerCSV.Builder setBoarded(long value) {
      validate(fields()[6], value);
      this.boarded = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'boarded' field has been set */
    public boolean hasBoarded() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'boarded' field */
    public com.salesforce.op.test.PassengerCSV.Builder clearBoarded() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'recordDate' field */
    public java.lang.Long getRecordDate() {
      return recordDate;
    }
    
    /** Sets the value of the 'recordDate' field */
    public com.salesforce.op.test.PassengerCSV.Builder setRecordDate(long value) {
      validate(fields()[7], value);
      this.recordDate = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'recordDate' field has been set */
    public boolean hasRecordDate() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'recordDate' field */
    public com.salesforce.op.test.PassengerCSV.Builder clearRecordDate() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'survived' field */
    public java.lang.Boolean getSurvived() {
      return survived;
    }
    
    /** Sets the value of the 'survived' field */
    public com.salesforce.op.test.PassengerCSV.Builder setSurvived(boolean value) {
      validate(fields()[8], value);
      this.survived = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'survived' field has been set */
    public boolean hasSurvived() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'survived' field */
    public com.salesforce.op.test.PassengerCSV.Builder clearSurvived() {
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public PassengerCSV build() {
      try {
        PassengerCSV record = new PassengerCSV();
        record.passengerId = fieldSetFlags()[0] ? this.passengerId : (java.lang.Integer) defaultValue(fields()[0]);
        record.age = fieldSetFlags()[1] ? this.age : (java.lang.Integer) defaultValue(fields()[1]);
        record.gender = fieldSetFlags()[2] ? this.gender : (com.salesforce.op.test.Gender) defaultValue(fields()[2]);
        record.height = fieldSetFlags()[3] ? this.height : (java.lang.Integer) defaultValue(fields()[3]);
        record.weight = fieldSetFlags()[4] ? this.weight : (java.lang.Integer) defaultValue(fields()[4]);
        record.description = fieldSetFlags()[5] ? this.description : (java.lang.String) defaultValue(fields()[5]);
        record.boarded = fieldSetFlags()[6] ? this.boarded : (java.lang.Long) defaultValue(fields()[6]);
        record.recordDate = fieldSetFlags()[7] ? this.recordDate : (java.lang.Long) defaultValue(fields()[7]);
        record.survived = fieldSetFlags()[8] ? this.survived : (java.lang.Boolean) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
