/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.salesforce.hw.iris;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Iris extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Iris\",\"namespace\":\"com.salesforce.hw.iris\",\"fields\":[{\"name\":\"ID\",\"type\":[\"int\",\"null\"]},{\"name\":\"SepalLength\",\"type\":[\"double\",\"null\"]},{\"name\":\"SepalWidth\",\"type\":[\"double\",\"null\"]},{\"name\":\"PetalLength\",\"type\":[\"double\",\"null\"]},{\"name\":\"PetalWidth\",\"type\":[\"double\",\"null\"]},{\"name\":\"Class\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Integer ID;
  @Deprecated public java.lang.Double SepalLength;
  @Deprecated public java.lang.Double SepalWidth;
  @Deprecated public java.lang.Double PetalLength;
  @Deprecated public java.lang.Double PetalWidth;
  @Deprecated public java.lang.String Class;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Iris() {}

  /**
   * All-args constructor.
   */
  public Iris(java.lang.Integer ID, java.lang.Double SepalLength, java.lang.Double SepalWidth, java.lang.Double PetalLength, java.lang.Double PetalWidth, java.lang.String Class) {
    this.ID = ID;
    this.SepalLength = SepalLength;
    this.SepalWidth = SepalWidth;
    this.PetalLength = PetalLength;
    this.PetalWidth = PetalWidth;
    this.Class = Class;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ID;
    case 1: return SepalLength;
    case 2: return SepalWidth;
    case 3: return PetalLength;
    case 4: return PetalWidth;
    case 5: return Class;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ID = (java.lang.Integer)value$; break;
    case 1: SepalLength = (java.lang.Double)value$; break;
    case 2: SepalWidth = (java.lang.Double)value$; break;
    case 3: PetalLength = (java.lang.Double)value$; break;
    case 4: PetalWidth = (java.lang.Double)value$; break;
    case 5: Class = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ID' field.
   */
  public java.lang.Integer getID() {
    return ID;
  }

  /**
   * Sets the value of the 'ID' field.
   * @param value the value to set.
   */
  public void setID(java.lang.Integer value) {
    this.ID = value;
  }

  /**
   * Gets the value of the 'SepalLength' field.
   */
  public java.lang.Double getSepalLength() {
    return SepalLength;
  }

  /**
   * Sets the value of the 'SepalLength' field.
   * @param value the value to set.
   */
  public void setSepalLength(java.lang.Double value) {
    this.SepalLength = value;
  }

  /**
   * Gets the value of the 'SepalWidth' field.
   */
  public java.lang.Double getSepalWidth() {
    return SepalWidth;
  }

  /**
   * Sets the value of the 'SepalWidth' field.
   * @param value the value to set.
   */
  public void setSepalWidth(java.lang.Double value) {
    this.SepalWidth = value;
  }

  /**
   * Gets the value of the 'PetalLength' field.
   */
  public java.lang.Double getPetalLength() {
    return PetalLength;
  }

  /**
   * Sets the value of the 'PetalLength' field.
   * @param value the value to set.
   */
  public void setPetalLength(java.lang.Double value) {
    this.PetalLength = value;
  }

  /**
   * Gets the value of the 'PetalWidth' field.
   */
  public java.lang.Double getPetalWidth() {
    return PetalWidth;
  }

  /**
   * Sets the value of the 'PetalWidth' field.
   * @param value the value to set.
   */
  public void setPetalWidth(java.lang.Double value) {
    this.PetalWidth = value;
  }

  /**
   * Gets the value of the 'Class' field.
   */
  public java.lang.String getClass$() {
    return Class;
  }

  /**
   * Sets the value of the 'Class' field.
   * @param value the value to set.
   */
  public void setClass$(java.lang.String value) {
    this.Class = value;
  }

  /** Creates a new Iris RecordBuilder */
  public static com.salesforce.hw.iris.Iris.Builder newBuilder() {
    return new com.salesforce.hw.iris.Iris.Builder();
  }
  
  /** Creates a new Iris RecordBuilder by copying an existing Builder */
  public static com.salesforce.hw.iris.Iris.Builder newBuilder(com.salesforce.hw.iris.Iris.Builder other) {
    return new com.salesforce.hw.iris.Iris.Builder(other);
  }
  
  /** Creates a new Iris RecordBuilder by copying an existing Iris instance */
  public static com.salesforce.hw.iris.Iris.Builder newBuilder(com.salesforce.hw.iris.Iris other) {
    return new com.salesforce.hw.iris.Iris.Builder(other);
  }
  
  /**
   * RecordBuilder for Iris instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Iris>
    implements org.apache.avro.data.RecordBuilder<Iris> {

    private java.lang.Integer ID;
    private java.lang.Double SepalLength;
    private java.lang.Double SepalWidth;
    private java.lang.Double PetalLength;
    private java.lang.Double PetalWidth;
    private java.lang.String Class;

    /** Creates a new Builder */
    private Builder() {
      super(com.salesforce.hw.iris.Iris.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.salesforce.hw.iris.Iris.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.SepalLength)) {
        this.SepalLength = data().deepCopy(fields()[1].schema(), other.SepalLength);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.SepalWidth)) {
        this.SepalWidth = data().deepCopy(fields()[2].schema(), other.SepalWidth);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PetalLength)) {
        this.PetalLength = data().deepCopy(fields()[3].schema(), other.PetalLength);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.PetalWidth)) {
        this.PetalWidth = data().deepCopy(fields()[4].schema(), other.PetalWidth);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Class)) {
        this.Class = data().deepCopy(fields()[5].schema(), other.Class);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Iris instance */
    private Builder(com.salesforce.hw.iris.Iris other) {
            super(com.salesforce.hw.iris.Iris.SCHEMA$);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.SepalLength)) {
        this.SepalLength = data().deepCopy(fields()[1].schema(), other.SepalLength);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.SepalWidth)) {
        this.SepalWidth = data().deepCopy(fields()[2].schema(), other.SepalWidth);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PetalLength)) {
        this.PetalLength = data().deepCopy(fields()[3].schema(), other.PetalLength);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.PetalWidth)) {
        this.PetalWidth = data().deepCopy(fields()[4].schema(), other.PetalWidth);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Class)) {
        this.Class = data().deepCopy(fields()[5].schema(), other.Class);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'ID' field */
    public java.lang.Integer getID() {
      return ID;
    }
    
    /** Sets the value of the 'ID' field */
    public com.salesforce.hw.iris.Iris.Builder setID(java.lang.Integer value) {
      validate(fields()[0], value);
      this.ID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ID' field has been set */
    public boolean hasID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ID' field */
    public com.salesforce.hw.iris.Iris.Builder clearID() {
      ID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'SepalLength' field */
    public java.lang.Double getSepalLength() {
      return SepalLength;
    }
    
    /** Sets the value of the 'SepalLength' field */
    public com.salesforce.hw.iris.Iris.Builder setSepalLength(java.lang.Double value) {
      validate(fields()[1], value);
      this.SepalLength = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'SepalLength' field has been set */
    public boolean hasSepalLength() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'SepalLength' field */
    public com.salesforce.hw.iris.Iris.Builder clearSepalLength() {
      SepalLength = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'SepalWidth' field */
    public java.lang.Double getSepalWidth() {
      return SepalWidth;
    }
    
    /** Sets the value of the 'SepalWidth' field */
    public com.salesforce.hw.iris.Iris.Builder setSepalWidth(java.lang.Double value) {
      validate(fields()[2], value);
      this.SepalWidth = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'SepalWidth' field has been set */
    public boolean hasSepalWidth() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'SepalWidth' field */
    public com.salesforce.hw.iris.Iris.Builder clearSepalWidth() {
      SepalWidth = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'PetalLength' field */
    public java.lang.Double getPetalLength() {
      return PetalLength;
    }
    
    /** Sets the value of the 'PetalLength' field */
    public com.salesforce.hw.iris.Iris.Builder setPetalLength(java.lang.Double value) {
      validate(fields()[3], value);
      this.PetalLength = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'PetalLength' field has been set */
    public boolean hasPetalLength() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'PetalLength' field */
    public com.salesforce.hw.iris.Iris.Builder clearPetalLength() {
      PetalLength = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'PetalWidth' field */
    public java.lang.Double getPetalWidth() {
      return PetalWidth;
    }
    
    /** Sets the value of the 'PetalWidth' field */
    public com.salesforce.hw.iris.Iris.Builder setPetalWidth(java.lang.Double value) {
      validate(fields()[4], value);
      this.PetalWidth = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'PetalWidth' field has been set */
    public boolean hasPetalWidth() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'PetalWidth' field */
    public com.salesforce.hw.iris.Iris.Builder clearPetalWidth() {
      PetalWidth = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'Class' field */
    public java.lang.String getClass$() {
      return Class;
    }
    
    /** Sets the value of the 'Class' field */
    public com.salesforce.hw.iris.Iris.Builder setClass$(java.lang.String value) {
      validate(fields()[5], value);
      this.Class = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'Class' field has been set */
    public boolean hasClass$() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'Class' field */
    public com.salesforce.hw.iris.Iris.Builder clearClass$() {
      Class = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public Iris build() {
      try {
        Iris record = new Iris();
        record.ID = fieldSetFlags()[0] ? this.ID : (java.lang.Integer) defaultValue(fields()[0]);
        record.SepalLength = fieldSetFlags()[1] ? this.SepalLength : (java.lang.Double) defaultValue(fields()[1]);
        record.SepalWidth = fieldSetFlags()[2] ? this.SepalWidth : (java.lang.Double) defaultValue(fields()[2]);
        record.PetalLength = fieldSetFlags()[3] ? this.PetalLength : (java.lang.Double) defaultValue(fields()[3]);
        record.PetalWidth = fieldSetFlags()[4] ? this.PetalWidth : (java.lang.Double) defaultValue(fields()[4]);
        record.Class = fieldSetFlags()[5] ? this.Class : (java.lang.String) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
